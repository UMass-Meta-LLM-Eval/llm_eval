{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMCV8nmPHve71tFtzxGoJA6"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":88,"metadata":{"id":"PrUTbNLhjJv2","executionInfo":{"status":"ok","timestamp":1709617741875,"user_tz":300,"elapsed":301,"user":{"displayName":"Aman Singh Thakur","userId":"05021885850512009871"}}},"outputs":[],"source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","\n","df = pd.read_csv('analysis.csv')"]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":441},"id":"x2AOH1wKjQo5","executionInfo":{"status":"ok","timestamp":1709617742129,"user_tz":300,"elapsed":4,"user":{"displayName":"Aman Singh Thakur","userId":"05021885850512009871"}},"outputId":"7ebc62ce-f20b-4377-c92f-fbc0ad15ba83"},"execution_count":89,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                            Unnamed: 0  exact-match  \\\n","0    0xc9bd6061f98c8f063dd565430a63693a4461620fc4d1...        False   \n","1    0x75ad6879e5dc3c40adf0ceab49e688de1357aab5a365...         True   \n","2    0x45365072aabe67c58d7ff7c52832ef157b6179860679...        False   \n","3    0x308ad16adb663753c9c158575e28fb04f916ddca08c7...        False   \n","4    0x1c3cd7966fe561a1cf38b45dd60bfa63efe4308d4cd8...        False   \n","..                                                 ...          ...   \n","395  0xdb028863bb8bad80a100485bf22825f7dae9fc1460e9...        False   \n","396  0xc20264c063e96fa23c943fcad479e6932c6ac656b970...         True   \n","397  0xcfa0830728dc5c2391fd18a6c84a59bd4b2d23f34ee0...        False   \n","398  0x7a418a66dc303332676275035de98dae80632f45f682...         True   \n","399  0xffd66489c101acce238f247b125a812a8eccd7c924e1...        False   \n","\n","     contains-match  human-kartik  human-kartik_confident  human-aman  \\\n","0             False         False                   False        True   \n","1              True          True                    True        True   \n","2             False         False                    True       False   \n","3              True         False                   False        True   \n","4             False          True                   False        True   \n","..              ...           ...                     ...         ...   \n","395           False         False                    True       False   \n","396            True          True                    True        True   \n","397           False         False                   False       False   \n","398            True          True                    True        True   \n","399           False          True                   False        True   \n","\n","     human-aman_confident  human-srinik  human-srinik_confident  \n","0                    True         False                    True  \n","1                    True          True                    True  \n","2                    True         False                    True  \n","3                   False          True                    True  \n","4                    True          True                   False  \n","..                    ...           ...                     ...  \n","395                  True         False                    True  \n","396                  True          True                    True  \n","397                  True         False                    True  \n","398                  True          True                    True  \n","399                  True          True                   False  \n","\n","[400 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-3e3f72c8-ddce-4a97-a95b-7dff78d4cfc7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>exact-match</th>\n","      <th>contains-match</th>\n","      <th>human-kartik</th>\n","      <th>human-kartik_confident</th>\n","      <th>human-aman</th>\n","      <th>human-aman_confident</th>\n","      <th>human-srinik</th>\n","      <th>human-srinik_confident</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0xc9bd6061f98c8f063dd565430a63693a4461620fc4d1...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0x75ad6879e5dc3c40adf0ceab49e688de1357aab5a365...</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0x45365072aabe67c58d7ff7c52832ef157b6179860679...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0x308ad16adb663753c9c158575e28fb04f916ddca08c7...</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0x1c3cd7966fe561a1cf38b45dd60bfa63efe4308d4cd8...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>395</th>\n","      <td>0xdb028863bb8bad80a100485bf22825f7dae9fc1460e9...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>396</th>\n","      <td>0xc20264c063e96fa23c943fcad479e6932c6ac656b970...</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>397</th>\n","      <td>0xcfa0830728dc5c2391fd18a6c84a59bd4b2d23f34ee0...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>398</th>\n","      <td>0x7a418a66dc303332676275035de98dae80632f45f682...</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>399</th>\n","      <td>0xffd66489c101acce238f247b125a812a8eccd7c924e1...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>400 rows Ã— 9 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3e3f72c8-ddce-4a97-a95b-7dff78d4cfc7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3e3f72c8-ddce-4a97-a95b-7dff78d4cfc7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3e3f72c8-ddce-4a97-a95b-7dff78d4cfc7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7ce10749-a08e-4fd1-a3da-d35ff435121c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7ce10749-a08e-4fd1-a3da-d35ff435121c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7ce10749-a08e-4fd1-a3da-d35ff435121c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 400,\n  \"fields\": [\n    {\n      \"column\": \"Unnamed: 0\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 400,\n        \"samples\": [\n          \"0xfd475f6d51fefc478981a1e8477c8d268a9b198f155be4ae5ecab5f1f3df9f82\",\n          \"0x99924e2d0cbbcc6b5475ab997c43896003cafe7d224ed97e7c034b5bd0eb29ab\",\n          \"0xe6b80edafe3f5abd5df1a9d138398cc1543ca2a3680aadff9d966191b28ff34b\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"exact-match\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"contains-match\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"human-kartik\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"human-kartik_confident\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"human-aman\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"human-aman_confident\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"human-srinik\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"human-srinik_confident\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":89}]},{"cell_type":"code","source":["df2 = df[df['Unnamed: 0'] == '0xc445feb436b3bc891cc8078c952a0e70213cf4ecbd357586b1b022ac6a88a293']\n","df2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":98},"id":"CWxWw67QKIhR","executionInfo":{"status":"ok","timestamp":1709617909038,"user_tz":300,"elapsed":185,"user":{"displayName":"Aman Singh Thakur","userId":"05021885850512009871"}},"outputId":"cd290bb1-e216-44f8-8814-92cd148eaa39"},"execution_count":93,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                           Unnamed: 0  exact-match  \\\n","34  0xc445feb436b3bc891cc8078c952a0e70213cf4ecbd35...        False   \n","\n","    contains-match  human-kartik  human-kartik_confident  human-aman  \\\n","34           False         False                   False        True   \n","\n","    human-aman_confident  human-srinik  human-srinik_confident  \n","34                  True         False                   False  "],"text/html":["\n","  <div id=\"df-93216af9-b341-43fd-bd72-20e93d53b99f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>exact-match</th>\n","      <th>contains-match</th>\n","      <th>human-kartik</th>\n","      <th>human-kartik_confident</th>\n","      <th>human-aman</th>\n","      <th>human-aman_confident</th>\n","      <th>human-srinik</th>\n","      <th>human-srinik_confident</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>34</th>\n","      <td>0xc445feb436b3bc891cc8078c952a0e70213cf4ecbd35...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>True</td>\n","      <td>True</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-93216af9-b341-43fd-bd72-20e93d53b99f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-93216af9-b341-43fd-bd72-20e93d53b99f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-93216af9-b341-43fd-bd72-20e93d53b99f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df2","summary":"{\n  \"name\": \"df2\",\n  \"rows\": 1,\n  \"fields\": [\n    {\n      \"column\": \"Unnamed: 0\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"0xc445feb436b3bc891cc8078c952a0e70213cf4ecbd357586b1b022ac6a88a293\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"exact-match\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"contains-match\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"human-kartik\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"human-kartik_confident\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"human-aman\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"human-aman_confident\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"human-srinik\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"human-srinik_confident\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":93}]},{"cell_type":"markdown","source":[],"metadata":{"id":"OWeqN6XInSMC"}},{"cell_type":"code","source":["#Ground Truth\n","df.set_index(['Unnamed: 0'], drop=True, inplace=True)\n","df = df.astype(int)\n","df['GT'] = df['human-kartik']+df['human-aman']+df['human-srinik']\n","reference = df['GT'].value_counts().values*100/len(df)\n","df['GT'].value_counts()/len(df)\n","#Human Agreement - 84%\n","#Human Disagreement - 16%"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7mljMzFJjboM","executionInfo":{"status":"ok","timestamp":1709608475430,"user_tz":300,"elapsed":3,"user":{"displayName":"Aman Singh Thakur","userId":"05021885850512009871"}},"outputId":"2c2cfd2f-b1c0-450b-fa09-853832d6c837"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    0.5025\n","3    0.3375\n","1    0.0875\n","2    0.0725\n","Name: GT, dtype: float64"]},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["# Data to plot\n","labels = ['Disagreement', 'Agreement']\n","sizes = [reference[2]+reference[3], reference[0]+reference[1]]  # Values representing the percentage of each slice\n","colors = ['red', 'yellowgreen']  # Colors for each slice\n","explode = (0.1, 0)  # explode 1st slice (Apples)\n","\n","# Plot\n","plt.figure(figsize=(8, 6))\n","plt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=True, startangle=140)\n","\n","plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n","\n","plt.title('Human Agreement')\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":521},"id":"nRqJopvBhiDd","executionInfo":{"status":"ok","timestamp":1709608477855,"user_tz":300,"elapsed":484,"user":{"displayName":"Aman Singh Thakur","userId":"05021885850512009871"}},"outputId":"1c9fb02a-b1b3-4b01-b7d7-032c7cd87b36"},"execution_count":52,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df['GroundTruth'] = df['GT'].apply(lambda x : 0 if x <= 1 else 1)\n","df.mean()\n","#Human Eval 0.41 vs Exact Match(0.1625 abd Contains Match is 0.2150)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"be0wQO8Sp-gm","executionInfo":{"status":"ok","timestamp":1709608479963,"user_tz":300,"elapsed":4,"user":{"displayName":"Aman Singh Thakur","userId":"05021885850512009871"}},"outputId":"f3944fa9-f1e4-4e77-ce56-4c8f472dc263"},"execution_count":53,"outputs":[{"output_type":"execute_result","data":{"text/plain":["exact-match               0.1625\n","contains-match            0.2150\n","human-kartik              0.4075\n","human-kartik_confident    0.5425\n","human-aman                0.4800\n","human-aman_confident      0.9500\n","human-srinik              0.3575\n","human-srinik_confident    0.8900\n","GT                        1.2450\n","GroundTruth               0.4100\n","dtype: float64"]},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["classical_eval_results= [df['exact-match'].mean(), df['contains-match'].mean(), 0.26, df['GroundTruth'].mean()]\n","labels = ['Exact Match', 'Contains Match', 'Eleuther AI', 'Human Eval']\n","colors = ['red', 'blue', 'orange', 'green']\n","\n","plt.bar(labels, classical_eval_results, color=colors)\n","\n","# Adding labels and title\n","plt.xlabel('Metrics')\n","plt.ylabel('Scores')\n","plt.title('Evaluations')\n","\n","# Show plot\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"nWcmPqtldtPd","executionInfo":{"status":"ok","timestamp":1709609083687,"user_tz":300,"elapsed":554,"user":{"displayName":"Aman Singh Thakur","userId":"05021885850512009871"}},"outputId":"f6fbcbfb-b61c-40d4-b22f-8196ac04e7d7"},"execution_count":74,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"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1KmTjh49qqNHjyomJuaSfRo9erRNSEpOTtbw4cPl5ORkU+/MmTMaOXKkPv/8c33xxRdq06aN+vXrZ/0h/fLLLyVJy5cv19GjR62P161bp8GDB6tfv376+uuvlZaWpu7du9u0PW/ePIWFhenrr7/WuHHjNHbsWO3evbv6T3QlnDp1SqmpqfrHP/4hNze3MusvDvGXlpZq4MCBOnXqlDZt2qSNGzdq//79ZZ7Xffv2ae3atfrggw/0wQcfaNOmTZo5c6akC5exIiIiNGbMGOt58ff3V2lpqW644Qa9/fbb+v777xUfH6+nnnpKb7311iX7vnLlSrm5uSkzM1OzZ8/W9OnTtXHjRknSO++8o3/+8596+eWXtWfPHq1du1ZBQUGXfT5Gjx6tt956S2fPnpV04TJHdHS09XV5UUFBgfr166e0tDR9/fXXio6O1oABA5SdnS1JWrNmjW644QZNnz7deqySlJWVpdtuu00dO3ZURkaGPv/8cw0YMEAlJSWVOq667Ny5c4qKilLDhg312WefafPmzdagUlxcXKk2KnrepAt/IMydO1erVq3Sp59+quzsbE2cONG6/vXXX1d8fLyee+457dq1S88//7ymTJli84eNJD355JMaP368du3apaioqAr7smzZMg0bNkz16tXTsGHDtGzZsio+I9eu//73v/rpp5/06aefav78+UpISNBf/vIXeXp6KjMzU3//+9/14IMP6vDhw9ZtGjZsqBUrVuj777/XwoULtXTpUv3zn/+0afdS7x/Vcdttt6lRo0Z65513rGUlJSVKSUnR8OHDJUm//vqrQkNDtW7dOn377bd64IEHdN9992nr1q3V3q9dGKgTRo4caTg6Ohpubm42y3PPPWetU1RUZISEhBh333230bFjR2PMmDGXbPP48eOGJOObb74xDMMwXn75ZaNhw4bGyZMny62fkJBgdOnS5bJ9vVivuLjY8Pb2NjZt2mQUFBQYDRs2NHbs2GGMHz/e6NmzZ4Xbl5SUGA0bNjTef/99a5kk491337WpFxERYQwfPrzCdlq0aGHce++91selpaWGt7e3sXjx4ssewx+RmZlpSDLWrFlzyXobNmwwHB0djezsbGvZd999Z0gytm7dahjGheeyfv36Rn5+vrXO448/boSHh1sf9+zZ0xg/fvxl+/WPf/zDGDJkiPXxyJEjjYEDB9q006NHD5ttunXrZjzxxBOGYRjGvHnzjLZt2xrFxcWX3ZdhGMby5csNDw8PwzAMIyQkxFi5cqVRWlpqtGrVyvjPf/5j/POf/zRatGhxyTY6depkvPDCC9bHLVq0MP75z3/a1Bk2bJjx5z//ucI2LndcV1Jlfo5/+1pftWqV0a5dO6O0tNS6vqioyHB1dTXWr19vGEb553/gwIHGyJEjrY/Le96WL19uSDL27t1rLUtKSjJ8fHysj1u1amW88cYbNtvNmDHDiIiIMAzDMA4cOGBIMhYsWHDZY8/LyzNcXV2NrKwswzAM4+uvvzYaNGhgnDlzxqZPF18zdV1F59LFxcWQZPz888+GYZT/vvn71/7IkSONFi1aGCUlJdaydu3aGTfffLP18fnz5w03NzfjzTffrLBPc+bMMUJDQ62PK/P+8XuffPKJIanMcXXs2NFaZ/z48Ubv3r2tj9evX284Oztbj7k8/fv3Nx577DHr48q+b9kTc4DqkFtvvVWLFy+2KWvcuLH1/05OTnr99dcVHBysFi1alPlLYM+ePYqPj1dmZqZOnDhhHfnJzs5W586dlZWVpa5du9q0+UfUq1dP9957r5YvX679+/erbdu2Cg4OLlMvNzdXzzzzjNLT03Xs2DGVlJTo7Nmz1r/8K5KVlaUxY8Zcss5v92exWOTr66tjx45V74AqyajkzdN37dolf39/+fv7W8s6duyoRo0aadeuXerWrZukC5cAGzZsaK3TtGnTSh1DUlKSkpOTlZ2drV9++UXFxcWXncT++/Pz23399a9/1YIFCxQYGKjo6Gj169dPAwYM0HXXXf5tYvTo0Vq+fLmaN2+uwsJC9evXTy+++KJNnYKCAk2dOlXr1q3T0aNHdf78ef3yyy+Veh389a9/rfZxXWmX+zn+rR07dmjv3r0251+68Bf27y9fV0f9+vXVqlUr6+PfPi+FhYXat2+f7r//fpufs/Pnz5eZPxYWFnbZfb355ptq1aqVunTpIkkKCQlRixYtlJKSovvvv/8PH4s9lHcuMzMzde+991a5rU6dOtl8r6WPj4/Nd1g6Ojrq+uuvt3ndpqSkaNGiRdq3b58KCgp0/vz5MvN2qvv+8dlnn9ls99t5XcOHD9ef/vQn/fTTT/Lz89Prr7+u/v37W0e3S0pK9Pzzz+utt97SkSNHVFxcrKKiItWvX7/yT0gdQACqQ9zc3NS6detL1rl4Tf3UqVM6deqUzSWYAQMGqEWLFlq6dKn8/PxUWlqqzp07W4fSXV1da7zPo0ePVnh4uL799luNHj263DojR47UyZMntXDhQrVo0ULOzs6KiIi47BB/Zfr7+8mYFovFGvxqS5s2bWSxWGpsonN1jmH16tWaOHGi5s2bp4iICDVs2FBz5sxRZmZmtffl7++v3bt36+OPP9bGjRs1btw4zZkzR5s2bbrkpFfpwhvmpEmTNHXqVN13333lhqaJEydq48aNmjt3rlq3bi1XV1fdddddV+3roCKV+Tm+qKCgQKGhoeXOq2nSpIkkycHBoUzo/u08kEsp73m52FZBQYEkaenSpQoPD7ep5+joaPO4vEu9v7ds2TJ99913Nue+tLRUycnJV20AKu9c/vYSlVT581PeubjU6zYjI0PDhw/XtGnTFBUVJQ8PD61evVrz5s27bLuVee23bNmywk/kdevWTa1atdLq1as1duxYvfvuuzbTHebMmaOFCxdqwYIFCgoKkpubmyZMmFDpy7Z1BXOAriL79u3To48+an3DGjlypPWFfvLkSe3evVvPPPOMbrvtNnXo0MFmkqh04a/krKwsnTp1qtz2nZycbOZVVEanTp3UqVMnffvtt2UmvV60efNmPfLII+rXr586deokZ2dnnThxwqZOvXr1yuw7ODi4xj9SXhMaN26sqKgoJSUlqbCwsMz6i5MHO3TooEOHDunQoUPWdd9//71Onz6tjh07Vnp/5Z2XzZs366abbtK4cePUtWtXtW7dukZGDFxdXTVgwAAtWrRI6enpysjI0DfffHPZ7Ro3bqw77rhDmzZtqjAIb968WaNGjdLgwYMVFBQkX19fm8m+UvnHWldfBzXhxhtv1J49e+Tt7a3WrVvbLBdHYZo0aWIzr6ekpETffvutTTvV+dn18fGRn5+f9u/fX2bfLVu2rFJb33zzjb766iulp6crKyvLulx8DdWFT0XWliZNmignJ8cmBGVlZf3hdrds2aIWLVro6aefVlhYmNq0aaMff/zxD7dbWcOHD9frr7+u999/Xw4ODjYfbtm8ebMGDhyoe++9V126dFFgYKD+7//+74r1raYQgOqQoqIi5eTk2CwXg0JJSYnuvfdeRUVFKTY2VsuXL9fOnTutfw14enrq+uuv17/+9S/t3btX//3vfxUXF2fT/rBhw+Tr66tBgwZp8+bN2r9/v9555x1lZGRIujCUeuDAAWVlZenEiRMqKiqqVL//+9//6ujRoxX+NdGmTRutWrVKu3btUmZmpoYPH17mr/qAgAClpaUpJyfHGtwSEhL05ptvKiEhQbt27dI333yjWbNmVfr5rE1JSUkqKSlR9+7d9c4772jPnj3atWuXFi1aZP04eGRkpIKCgjR8+HBt375dW7du1YgRI9SzZ89KXVK4KCAgQJmZmTp48KD10mabNm301Vdfaf369fq///s/TZkyxTp5vLpWrFihZcuW6dtvv9X+/fv12muvydXVVS1atKj09idOnFD79u3LXd+mTRutWbNGWVlZ2rFjh+65554yf6kGBATo008/1ZEjR6yv/cmTJ+vLL7/UuHHjtHPnTv3www9avHhxmRBdV1zq5/j3hg8fLi8vLw0cOFCfffaZDhw4oPT0dD3yyCPWkYbevXtr3bp1WrdunX744QeNHTu2zCd0ynveKmPatGlKTEzUokWL9H//93/65ptvtHz5cs2fP79Kx7xs2TJ1795dt9xyizp37mxdbrnlFnXr1u2angzdq1cvHT9+XLNnz9a+ffuUlJSkjz766A+326ZNG2VnZ2v16tXat2+fFi1apHfffbcGenzBsWPHyrxOfztydfF967nnntNdd91lcyuHNm3aaOPGjdqyZYt27dqlBx980ObTrVcLAlAdkpqaqqZNm9osPXr0kCQ999xz+vHHH/Xyyy9LunCd91//+peeeeYZ7dixQw4ODlq9erW2bdumzp0769FHHy1zIzInJydt2LBB3t7e6tevn4KCgjRz5kzrcPeQIUMUHR2tW2+9VU2aNKn0xxrd3NwueXOzZcuW6eeff9aNN96o++67T4888kiZ+03MmzdPGzdulL+/v7p27SrpwhvL22+/rffee08hISHq3bt3nfmUQWBgoLZv365bb71Vjz32mDp37qzbb79daWlp1jkDFotF//nPf+Tp6albbrlFkZGRCgwMVEpKSpX2NXHiRDk6Oqpjx45q0qSJsrOz9eCDD+rOO+9UTEyMwsPDdfLkSY0bN+4PHVOjRo20dOlS/fnPf1ZwcLA+/vhjvf/++7r++usrtb2rq+sl686fP1+enp666aabNGDAAEVFRenGG2+0qTN9+nQdPHhQrVq1sl4Catu2rTZs2KAdO3aoe/fuioiI0H/+859KzU2yh0v9HP9e/fr19emnn6p58+a688471aFDB91///369ddfrXM9Ro8erZEjR1rDc2BgoG699Vabdsp73irjb3/7m1555RUtX75cQUFB6tmzp1asWFGlEaDi4mK99tprGjJkSLnrhwwZoldffbXSl+2uNh06dNBLL72kpKQkdenSRVu3brX5pF113XHHHXr00Uf10EMPKSQkRFu2bNGUKVNqoMcXtGvXrszrdNu2bdb1rVu3Vvfu3bVz507rp78ueuaZZ3TjjTcqKipKvXr1sv5hfbWxGJWd0QkAAHCNYAQIAACYDgEIAACYDgEIAACYDgEIAACYDgEIAACYDgEIAACYDgEIAACYDgEIAH7DYrFo7dq19u4GgFpGAAJQ54waNUoWi0V///vfy6z7xz/+IYvFolGjRlWqrfT0dFksljJfH1GRo0ePqm/fvlXoLYCrEQEIQJ3k7++v1atX65dffrGW/frrr3rjjTfUvHnzGt/fxW+y9vX1tfneIwDXJgIQgDrpxhtvlL+/v9asWWMtW7NmjZo3b279vjhJKi0tVWJiolq2bClXV1d16dJF//73vyVJBw8etH5vlqenp83IUa9evfTQQw9pwoQJ8vLyUlRUlKSyl8AOHz6sYcOGqXHjxnJzc1NYWJgyMzMlSTt27NCtt96qhg0byt3dXaGhofrqq69q82kBUEPq5rcJAoAufBHo8uXLrV/GmJycrNjYWKWnp1vrJCYm6rXXXtOSJUvUpk0bffrpp7r33nvVpEkT9ejRQ++8846GDBmi3bt3y93dXa6urtZtV65cqbFjx2rz5s3l7r+goEA9e/ZUs2bN9N5778nX11fbt2+3fov98OHD1bVrVy1evFiOjo7KyspSvXr1au8JAVBjCEAA6qx7771XkydP1o8//ihJ2rx5s1avXm0NQEVFRXr++ef18ccfKyIiQpIUGBiozz//XC+//LJ69uypxo0bS5K8vb3VqFEjm/bbtGmj2bNnV7j/N954Q8ePH9eXX35pbad169bW9dnZ2Xr88cfVvn17a3sArg4EIAB1VpMmTdS/f3+tWLFChmGof//+8vLysq7fu3evzp49q9tvv91mu+LiYpvLZBUJDQ295PqsrCx17drVGn5+Ly4uTn/729+0atUqRUZG6q9//atatWpViSMDYG8EIAB12ujRo/XQQw9JkpKSkmzWFRQUSJLWrVunZs2a2ayrzERmNze3S67/7eWy8kydOlX33HOP1q1bp48++kgJCQlavXq1Bg8efNl9A7AvJkEDqNOio6NVXFysc+fOWScqX9SxY0c5OzsrOztbrVu3tln8/f0lSU5OTpKkkpKSKu87ODhYWVlZOnXqVIV12rZtq0cffVQbNmzQnXfeqeXLl1d5PwCuPAIQgDrN0dFRu3bt0vfffy9HR0ebdQ0bNtTEiRP16KOPauXKldq3b5+2b9+uF154QStXrpQktWjRQhaLRR988IGOHz9uHTWqjGHDhsnX11eDBg3S5s2btX//fr3zzjvKyMjQL7/8ooceekjp6en68ccftXnzZn355Zfq0KFDjR4/gNpBAAJQ57m7u8vd3b3cdTNmzNCUKVOUmJioDh06KDo6WuvWrVPLli0lSc2aNdO0adP05JNPysfHx3o5rTKcnJy0YcMGeXt7q1+/fgoKCtLMmTPl6OgoR0dHnTx5UiNGjFDbtm119913q2/fvpo2bVqNHDOA2mUxDMOwdycAAACuJEaAAACA6RCAAACA6RCAAACA6RCAAACA6RCAAACA6RCAAACA6RCAAACA6RCAAACA6RCAAACA6RCAAACA6RCAAACA6RCAAACA6fw/JKO1uJQ8Rn0AAAAASUVORK5CYII=\n"},"metadata":{}}]},{"cell_type":"code","source":["human_eval_results = [df['human-srinik'].mean(), df['human-kartik'].mean(), df['human-aman'].mean()]\n","labels = ['Srinik', 'Kartik', 'Aman']\n","colors = ['blue', 'red', 'green']\n","\n","plt.bar(labels, human_eval_results, color=colors)\n","\n","# Adding labels and title\n","plt.xlabel('Humans')\n","plt.ylabel('Scores')\n","plt.title('Evaluations')\n","\n","# Show plot\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":472},"id":"zlsGW69OosuV","executionInfo":{"status":"ok","timestamp":1709609089339,"user_tz":300,"elapsed":550,"user":{"displayName":"Aman Singh Thakur","userId":"05021885850512009871"}},"outputId":"d67b1f78-51d1-43af-b33e-94db389f6607"},"execution_count":75,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#Human Eval 0.41 vs Exact Match(0.1625 abd Contains Match is 0.2150)#Majority Agreed with Ground Truth\n","from sklearn.metrics import cohen_kappa_score\n","\n","def calculate_cohen_kappa_score(df, col):\n","  score = cohen_kappa_score(df[col], df['GroundTruth'])\n","  avg_agreement = len(df[df['GroundTruth'] == df[col]])/len(df)\n","  score, avg_agreement = score*100, avg_agreement*100\n","  return score, avg_agreement\n","\n","kappa_score_kartik = calculate_cohen_kappa_score(df, 'human-kartik')\n","kappa_score_aman = calculate_cohen_kappa_score(df, 'human-aman')\n","kappa_score_srinik = calculate_cohen_kappa_score(df, 'human-srinik')\n","print(kappa_score_kartik)\n","print(kappa_score_aman)\n","print(kappa_score_srinik)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wfmxHyYPlmh1","executionInfo":{"status":"ok","timestamp":1709608578242,"user_tz":300,"elapsed":180,"user":{"displayName":"Aman Singh Thakur","userId":"05021885850512009871"}},"outputId":"92886a3c-2fb6-4857-eb88-66ce1b03913d"},"execution_count":61,"outputs":[{"output_type":"stream","name":"stdout","text":["(95.34498810385848, 97.75)\n","(82.87671232876713, 91.5)\n","(88.93222304205756, 94.75)\n"]}]},{"cell_type":"code","source":["#Kartik is not the champion annotator!\n","def confident_and_correct_score(df, col,):\n","  score = len(df[ (df[col+'_confident'] == 1) & (df[col] == df['GroundTruth']) ])/len(df[df[col+'_confident'] == 1])\n","  return score*100\n","cc_score_kartik = confident_and_correct_score(df, 'human-kartik')\n","cc_score_aman = confident_and_correct_score(df, 'human-aman')\n","cc_score_srinik = confident_and_correct_score(df, 'human-srinik')\n","print(cc_score_kartik)\n","print(cc_score_aman)\n","print(cc_score_srinik)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YmjGpYvKoPiQ","executionInfo":{"status":"ok","timestamp":1709608592886,"user_tz":300,"elapsed":4,"user":{"displayName":"Aman Singh Thakur","userId":"05021885850512009871"}},"outputId":"f81fed59-8c3b-4f14-c5ad-6cc958deb162"},"execution_count":63,"outputs":[{"output_type":"stream","name":"stdout","text":["100.0\n","94.47368421052632\n","96.34831460674157\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","# Data for three plots\n","x = ['Kappa Score', 'Ground Truth Consensus', 'Ground Truth Consensus \\nwith High Confidence']\n","y1 = [kappa_score_kartik[0], kappa_score_kartik[1], cc_score_kartik]\n","y2 = [kappa_score_aman[0], kappa_score_aman[1], cc_score_aman]\n","y3 = [kappa_score_srinik[0], kappa_score_srinik[1], cc_score_srinik]\n","\n","print(y1)\n","print(y2)\n","print(y3)\n","\n","# Plot\n","plt.figure(figsize=(8, 6))\n","plt.plot(x, y1, color='red', label='Kartik')\n","plt.plot(x, y2, color='green', label='Aman')\n","plt.plot(x, y3, color='blue', label='Srinik')\n","\n","\n","# Limit y between 80 and 100\n","plt.ylim(80, 101)\n","\n","# Customize the plot\n","plt.title('Inter-Human Evaluation')\n","plt.xlabel('Metrics')\n","plt.ylabel('Scores')\n","plt.legend()\n","\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":632},"id":"0o8sZaZ3kyIV","executionInfo":{"status":"ok","timestamp":1709608933691,"user_tz":300,"elapsed":531,"user":{"displayName":"Aman Singh Thakur","userId":"05021885850512009871"}},"outputId":"11ab1656-923b-4fbb-ee03-24e97f0b909e"},"execution_count":73,"outputs":[{"output_type":"stream","name":"stdout","text":["[95.34498810385848, 97.75, 100.0]\n","[82.87671232876713, 91.5, 94.47368421052632]\n","[88.93222304205756, 94.75, 96.34831460674157]\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["len(df[ (df['human-aman'+'_confident'] == 1) & (df['human-aman'] == df['GroundTruth']) ])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9CfFLmz-ry3a","executionInfo":{"status":"ok","timestamp":1709593243957,"user_tz":300,"elapsed":139,"user":{"displayName":"Aman Singh Thakur","userId":"05021885850512009871"}},"outputId":"90f102c7-aa14-45bd-c5b4-eb8f6b1bf3c5"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["359"]},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":492},"id":"Jel0eGOoshDP","executionInfo":{"status":"ok","timestamp":1709595066939,"user_tz":300,"elapsed":8,"user":{"displayName":"Aman Singh Thakur","userId":"05021885850512009871"}},"outputId":"ef9ba5f3-5562-4f6a-c2c7-b3c828e1666a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                    exact-match  \\\n","Unnamed: 0                                                        \n","0xc9bd6061f98c8f063dd565430a63693a4461620fc4d17...            0   \n","0x75ad6879e5dc3c40adf0ceab49e688de1357aab5a3657...            1   \n","0x45365072aabe67c58d7ff7c52832ef157b6179860679e...            0   \n","0x308ad16adb663753c9c158575e28fb04f916ddca08c71...            0   \n","0x1c3cd7966fe561a1cf38b45dd60bfa63efe4308d4cd8b...            0   \n","...                                                         ...   \n","0xdb028863bb8bad80a100485bf22825f7dae9fc1460e9d...            0   \n","0xc20264c063e96fa23c943fcad479e6932c6ac656b9701...            1   \n","0xcfa0830728dc5c2391fd18a6c84a59bd4b2d23f34ee04...            0   \n","0x7a418a66dc303332676275035de98dae80632f45f6822...            1   \n","0xffd66489c101acce238f247b125a812a8eccd7c924e10...            0   \n","\n","                                                    contains-match  \\\n","Unnamed: 0                                                           \n","0xc9bd6061f98c8f063dd565430a63693a4461620fc4d17...               0   \n","0x75ad6879e5dc3c40adf0ceab49e688de1357aab5a3657...               1   \n","0x45365072aabe67c58d7ff7c52832ef157b6179860679e...               0   \n","0x308ad16adb663753c9c158575e28fb04f916ddca08c71...               1   \n","0x1c3cd7966fe561a1cf38b45dd60bfa63efe4308d4cd8b...               0   \n","...                                                            ...   \n","0xdb028863bb8bad80a100485bf22825f7dae9fc1460e9d...               0   \n","0xc20264c063e96fa23c943fcad479e6932c6ac656b9701...               1   \n","0xcfa0830728dc5c2391fd18a6c84a59bd4b2d23f34ee04...               0   \n","0x7a418a66dc303332676275035de98dae80632f45f6822...               1   \n","0xffd66489c101acce238f247b125a812a8eccd7c924e10...               0   \n","\n","                                                    human-kartik  \\\n","Unnamed: 0                                                         \n","0xc9bd6061f98c8f063dd565430a63693a4461620fc4d17...             0   \n","0x75ad6879e5dc3c40adf0ceab49e688de1357aab5a3657...             1   \n","0x45365072aabe67c58d7ff7c52832ef157b6179860679e...             0   \n","0x308ad16adb663753c9c158575e28fb04f916ddca08c71...             0   \n","0x1c3cd7966fe561a1cf38b45dd60bfa63efe4308d4cd8b...             1   \n","...                                                          ...   \n","0xdb028863bb8bad80a100485bf22825f7dae9fc1460e9d...             0   \n","0xc20264c063e96fa23c943fcad479e6932c6ac656b9701...             1   \n","0xcfa0830728dc5c2391fd18a6c84a59bd4b2d23f34ee04...             0   \n","0x7a418a66dc303332676275035de98dae80632f45f6822...             1   \n","0xffd66489c101acce238f247b125a812a8eccd7c924e10...             1   \n","\n","                                                    human-kartik_confident  \\\n","Unnamed: 0                                                                   \n","0xc9bd6061f98c8f063dd565430a63693a4461620fc4d17...                       0   \n","0x75ad6879e5dc3c40adf0ceab49e688de1357aab5a3657...                       1   \n","0x45365072aabe67c58d7ff7c52832ef157b6179860679e...                       1   \n","0x308ad16adb663753c9c158575e28fb04f916ddca08c71...                       0   \n","0x1c3cd7966fe561a1cf38b45dd60bfa63efe4308d4cd8b...                       0   \n","...                                                                    ...   \n","0xdb028863bb8bad80a100485bf22825f7dae9fc1460e9d...                       1   \n","0xc20264c063e96fa23c943fcad479e6932c6ac656b9701...                       1   \n","0xcfa0830728dc5c2391fd18a6c84a59bd4b2d23f34ee04...                       0   \n","0x7a418a66dc303332676275035de98dae80632f45f6822...                       1   \n","0xffd66489c101acce238f247b125a812a8eccd7c924e10...                       0   \n","\n","                                                    human-aman  \\\n","Unnamed: 0                                                       \n","0xc9bd6061f98c8f063dd565430a63693a4461620fc4d17...           1   \n","0x75ad6879e5dc3c40adf0ceab49e688de1357aab5a3657...           1   \n","0x45365072aabe67c58d7ff7c52832ef157b6179860679e...           0   \n","0x308ad16adb663753c9c158575e28fb04f916ddca08c71...           1   \n","0x1c3cd7966fe561a1cf38b45dd60bfa63efe4308d4cd8b...           1   \n","...                                                        ...   \n","0xdb028863bb8bad80a100485bf22825f7dae9fc1460e9d...           0   \n","0xc20264c063e96fa23c943fcad479e6932c6ac656b9701...           1   \n","0xcfa0830728dc5c2391fd18a6c84a59bd4b2d23f34ee04...           0   \n","0x7a418a66dc303332676275035de98dae80632f45f6822...           1   \n","0xffd66489c101acce238f247b125a812a8eccd7c924e10...           1   \n","\n","                                                    human-aman_confident  \\\n","Unnamed: 0                                                                 \n","0xc9bd6061f98c8f063dd565430a63693a4461620fc4d17...                     1   \n","0x75ad6879e5dc3c40adf0ceab49e688de1357aab5a3657...                     1   \n","0x45365072aabe67c58d7ff7c52832ef157b6179860679e...                     1   \n","0x308ad16adb663753c9c158575e28fb04f916ddca08c71...                     0   \n","0x1c3cd7966fe561a1cf38b45dd60bfa63efe4308d4cd8b...                     1   \n","...                                                                  ...   \n","0xdb028863bb8bad80a100485bf22825f7dae9fc1460e9d...                     1   \n","0xc20264c063e96fa23c943fcad479e6932c6ac656b9701...                     1   \n","0xcfa0830728dc5c2391fd18a6c84a59bd4b2d23f34ee04...                     1   \n","0x7a418a66dc303332676275035de98dae80632f45f6822...                     1   \n","0xffd66489c101acce238f247b125a812a8eccd7c924e10...                     1   \n","\n","                                                    human-srinik  \\\n","Unnamed: 0                                                         \n","0xc9bd6061f98c8f063dd565430a63693a4461620fc4d17...             0   \n","0x75ad6879e5dc3c40adf0ceab49e688de1357aab5a3657...             1   \n","0x45365072aabe67c58d7ff7c52832ef157b6179860679e...             0   \n","0x308ad16adb663753c9c158575e28fb04f916ddca08c71...             1   \n","0x1c3cd7966fe561a1cf38b45dd60bfa63efe4308d4cd8b...             1   \n","...                                                          ...   \n","0xdb028863bb8bad80a100485bf22825f7dae9fc1460e9d...             0   \n","0xc20264c063e96fa23c943fcad479e6932c6ac656b9701...             1   \n","0xcfa0830728dc5c2391fd18a6c84a59bd4b2d23f34ee04...             0   \n","0x7a418a66dc303332676275035de98dae80632f45f6822...             1   \n","0xffd66489c101acce238f247b125a812a8eccd7c924e10...             1   \n","\n","                                                    human-srinik_confident  \\\n","Unnamed: 0                                                                   \n","0xc9bd6061f98c8f063dd565430a63693a4461620fc4d17...                       1   \n","0x75ad6879e5dc3c40adf0ceab49e688de1357aab5a3657...                       1   \n","0x45365072aabe67c58d7ff7c52832ef157b6179860679e...                       1   \n","0x308ad16adb663753c9c158575e28fb04f916ddca08c71...                       1   \n","0x1c3cd7966fe561a1cf38b45dd60bfa63efe4308d4cd8b...                       0   \n","...                                                                    ...   \n","0xdb028863bb8bad80a100485bf22825f7dae9fc1460e9d...                       1   \n","0xc20264c063e96fa23c943fcad479e6932c6ac656b9701...                       1   \n","0xcfa0830728dc5c2391fd18a6c84a59bd4b2d23f34ee04...                       1   \n","0x7a418a66dc303332676275035de98dae80632f45f6822...                       1   \n","0xffd66489c101acce238f247b125a812a8eccd7c924e10...                       0   \n","\n","                                                    GT  GroundTruth  \n","Unnamed: 0                                                           \n","0xc9bd6061f98c8f063dd565430a63693a4461620fc4d17...   1            0  \n","0x75ad6879e5dc3c40adf0ceab49e688de1357aab5a3657...   3            1  \n","0x45365072aabe67c58d7ff7c52832ef157b6179860679e...   0            0  \n","0x308ad16adb663753c9c158575e28fb04f916ddca08c71...   2            1  \n","0x1c3cd7966fe561a1cf38b45dd60bfa63efe4308d4cd8b...   3            1  \n","...                                                 ..          ...  \n","0xdb028863bb8bad80a100485bf22825f7dae9fc1460e9d...   0            0  \n","0xc20264c063e96fa23c943fcad479e6932c6ac656b9701...   3            1  \n","0xcfa0830728dc5c2391fd18a6c84a59bd4b2d23f34ee04...   0            0  \n","0x7a418a66dc303332676275035de98dae80632f45f6822...   3            1  \n","0xffd66489c101acce238f247b125a812a8eccd7c924e10...   3            1  \n","\n","[400 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-ffdf4773-79ce-4838-9e32-9caa83364c51\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>exact-match</th>\n","      <th>contains-match</th>\n","      <th>human-kartik</th>\n","      <th>human-kartik_confident</th>\n","      <th>human-aman</th>\n","      <th>human-aman_confident</th>\n","      <th>human-srinik</th>\n","      <th>human-srinik_confident</th>\n","      <th>GT</th>\n","      <th>GroundTruth</th>\n","    </tr>\n","    <tr>\n","      <th>Unnamed: 0</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0xc9bd6061f98c8f063dd565430a63693a4461620fc4d179101221797ee49a36fa</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0x75ad6879e5dc3c40adf0ceab49e688de1357aab5a3657aa3f9becb2040f3c9b</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>0x45365072aabe67c58d7ff7c52832ef157b6179860679e3636b4d079776a48ff</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0x308ad16adb663753c9c158575e28fb04f916ddca08c71666de521e7c0bb428bf</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>0x1c3cd7966fe561a1cf38b45dd60bfa63efe4308d4cd8b784c442e37f267795de</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>0xdb028863bb8bad80a100485bf22825f7dae9fc1460e9d476ced783bfcc206b44</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0xc20264c063e96fa23c943fcad479e6932c6ac656b9701d0c4d141906765e5cae</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>0xcfa0830728dc5c2391fd18a6c84a59bd4b2d23f34ee04a924a12bd3f79baa0ec</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0x7a418a66dc303332676275035de98dae80632f45f6822d8f1637e9c575c441e0</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>0xffd66489c101acce238f247b125a812a8eccd7c924e10f2faa078547dad1bb5</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>400 rows Ã— 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ffdf4773-79ce-4838-9e32-9caa83364c51')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ffdf4773-79ce-4838-9e32-9caa83364c51 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ffdf4773-79ce-4838-9e32-9caa83364c51');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-408eb3ef-5c1a-44e5-bb33-2228bbf16033\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-408eb3ef-5c1a-44e5-bb33-2228bbf16033')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-408eb3ef-5c1a-44e5-bb33-2228bbf16033 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 400,\n  \"fields\": [\n    {\n      \"column\": \"exact-match\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"contains-match\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"human-kartik\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"human-kartik_confident\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"human-aman\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"human-aman_confident\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"human-srinik\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"human-srinik_confident\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GT\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 3,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GroundTruth\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":67}]},{"cell_type":"code","source":["from sklearn.metrics import confusion_matrix\n","\n","conf_matrix = confusion_matrix(df['exact-match'], df['GroundTruth'],)\n","confusion_df = pd.DataFrame(conf_matrix, index=['Exact Match F', 'Exact Match T'], columns=['GT F', 'GT T'])\n","confusion_df"],"metadata":{"id":"ggIz9wlxzoDz","colab":{"base_uri":"https://localhost:8080/","height":112},"executionInfo":{"status":"ok","timestamp":1709609643742,"user_tz":300,"elapsed":5,"user":{"displayName":"Aman Singh Thakur","userId":"05021885850512009871"}},"outputId":"172ae44b-252f-46a5-888c-3a23149ec2f6"},"execution_count":84,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               GT F  GT T\n","Exact Match F   236    99\n","Exact Match T     0    65"],"text/html":["\n","  <div id=\"df-8a91497e-0efe-4852-a81e-48cf42f281dd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>GT F</th>\n","      <th>GT T</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Exact Match F</th>\n","      <td>236</td>\n","      <td>99</td>\n","    </tr>\n","    <tr>\n","      <th>Exact Match T</th>\n","      <td>0</td>\n","      <td>65</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8a91497e-0efe-4852-a81e-48cf42f281dd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8a91497e-0efe-4852-a81e-48cf42f281dd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8a91497e-0efe-4852-a81e-48cf42f281dd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8b60e821-4396-4420-8639-39b5f97b8d9c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8b60e821-4396-4420-8639-39b5f97b8d9c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8b60e821-4396-4420-8639-39b5f97b8d9c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"confusion_df","summary":"{\n  \"name\": \"confusion_df\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"GT F\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 166,\n        \"min\": 0,\n        \"max\": 236,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          236\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GT T\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24,\n        \"min\": 65,\n        \"max\": 99,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          65,\n          99\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":84}]},{"cell_type":"code","source":["conf_matrix = confusion_matrix(df['contains-match'], df['GroundTruth'])\n","confusion_df = pd.DataFrame(conf_matrix, index=['Contains Match F', 'Contains Match T'], columns=['GT F', 'GT T'])\n","confusion_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"wxz4F10tpzwK","executionInfo":{"status":"ok","timestamp":1709609664549,"user_tz":300,"elapsed":169,"user":{"displayName":"Aman Singh Thakur","userId":"05021885850512009871"}},"outputId":"cabea111-d2a6-4083-c1b7-1cca0884099a"},"execution_count":85,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  GT F  GT T\n","Contains Match F   234    80\n","Contains Match T     2    84"],"text/html":["\n","  <div id=\"df-e85ab5f0-f79d-419a-a423-93db735608c7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>GT F</th>\n","      <th>GT T</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Contains Match F</th>\n","      <td>234</td>\n","      <td>80</td>\n","    </tr>\n","    <tr>\n","      <th>Contains Match T</th>\n","      <td>2</td>\n","      <td>84</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e85ab5f0-f79d-419a-a423-93db735608c7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e85ab5f0-f79d-419a-a423-93db735608c7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e85ab5f0-f79d-419a-a423-93db735608c7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6662727d-811f-4deb-94e1-bcd24aea3cc7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6662727d-811f-4deb-94e1-bcd24aea3cc7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6662727d-811f-4deb-94e1-bcd24aea3cc7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"confusion_df","summary":"{\n  \"name\": \"confusion_df\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"GT F\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 164,\n        \"min\": 2,\n        \"max\": 234,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2,\n          234\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GT T\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 80,\n        \"max\": 84,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          84,\n          80\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":85}]},{"cell_type":"code","source":["df[df['GT']==1]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"0sWna1jUrCu7","executionInfo":{"status":"ok","timestamp":1709610787548,"user_tz":300,"elapsed":153,"user":{"displayName":"Aman Singh Thakur","userId":"05021885850512009871"}},"outputId":"54d9e855-7a21-4ceb-b3ad-2e3a947831ea"},"execution_count":87,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                                    exact-match  \\\n","Unnamed: 0                                                        \n","0xc9bd6061f98c8f063dd565430a63693a4461620fc4d17...            0   \n","0xf1f3997c5bffc0320f7595d45ed23bac4b0384380e75e...            0   \n","0x1f24e50d1560feeb33648c41073442eb0d8e6141f3b45...            0   \n","0xbeafa8c284db35c2a2bdd09b8edc65e47aaf412773b2f...            0   \n","0x45dc7c1f0731e3c8cf9422188593d0f4ddcd62950e605...            0   \n","0x60655fde7ea1bf04ddfad81729cd4a4ac5b723f9b30d6...            0   \n","0xc445feb436b3bc891cc8078c952a0e70213cf4ecbd357...            0   \n","0x1dfbd4f4d36b25fbdfeb7b17f656175ed0d5e459e7af6...            0   \n","0xa3211a3b35e884c660988e88a36df3388cb8bd05794a6...            0   \n","0x1419529383d6a55e1f7d1315f840dcf6a8b93e99f8729...            0   \n","0xab72a47829397cc7ac1e53bb1c0126334d66e3bf87a29...            0   \n","0x3100ab96812906084d5b87f864e0d3fe16e04deb52d5a...            0   \n","0xaa2cb6e460687d5dfddaacf798e430a79f7b086ee891b...            0   \n","0xe29526a3bff75256608c46231f9c237504cd1206e6849...            0   \n","0x2d2975548b8cdea84b19e2dd239990ae17b8fc5c9fa30...            0   \n","0xbf9d93ce593c5145be2e335b9ea4cd1838f465fbb7473...            0   \n","0xf35e198a1e826dfc275dbae9a83c587ff956298b9a0a2...            0   \n","0x6aff75e35246c9f757a241fa0bc8848c054b41ad2007f...            0   \n","0x78cd21a68a0ddaf0684e8f89467a2d15b16ec4147d54a...            0   \n","0x8fa7e26992e717d55e34454784605ae19d9697b88e859...            0   \n","0xc2ad81316ed85cd08711b7e67e53bbeb7871c1fe24c27...            0   \n","0xe8fddf91348363df61126262cdf541cf736b8e9322199...            0   \n","0xe3c69605c84fa4380385ed0fbb410180555436f243164...            0   \n","0xe5ac8cbcca40132705614602001dfb81eca43525e3887...            0   \n","0xb504f2665d23cf0e65785d737a42451e3467724cb261b...            0   \n","0x67fb7be3fbc598ef19414cbed1061460f552180652675...            0   \n","0xad340d1d141854ca3a0371bee60aaba8733c06e672330...            0   \n","0x994105e94c0a8e8c5acd8b83d4ffff83766c978d466d2...            0   \n","0x5fbf91464b5a094c6cba8bce65bf7a07d0cf899d6e469...            0   \n","0x4dcf0ea7f0cb3e43b510f03c32b9e826f9bba4b6e1990...            0   \n","0xfed33145387f47e5f874c638b0459e953a535b475cbb8...            0   \n","0x79d4fd6c7e77cf06ab8a86f2f185543c95889a7657d5a...            0   \n","0x696572d5379363a825494ae9e60ca6fbc902d8af94cc4...            0   \n","0x41c180a07352075be10d542f70a8a11604d1282491f09...            0   \n","0x57e4c893a74763e5f43434f3811977abb71406581036f...            0   \n","\n","                                                    contains-match  \\\n","Unnamed: 0                                                           \n","0xc9bd6061f98c8f063dd565430a63693a4461620fc4d17...               0   \n","0xf1f3997c5bffc0320f7595d45ed23bac4b0384380e75e...               0   \n","0x1f24e50d1560feeb33648c41073442eb0d8e6141f3b45...               0   \n","0xbeafa8c284db35c2a2bdd09b8edc65e47aaf412773b2f...               0   \n","0x45dc7c1f0731e3c8cf9422188593d0f4ddcd62950e605...               0   \n","0x60655fde7ea1bf04ddfad81729cd4a4ac5b723f9b30d6...               0   \n","0xc445feb436b3bc891cc8078c952a0e70213cf4ecbd357...               0   \n","0x1dfbd4f4d36b25fbdfeb7b17f656175ed0d5e459e7af6...               0   \n","0xa3211a3b35e884c660988e88a36df3388cb8bd05794a6...               0   \n","0x1419529383d6a55e1f7d1315f840dcf6a8b93e99f8729...               0   \n","0xab72a47829397cc7ac1e53bb1c0126334d66e3bf87a29...               0   \n","0x3100ab96812906084d5b87f864e0d3fe16e04deb52d5a...               0   \n","0xaa2cb6e460687d5dfddaacf798e430a79f7b086ee891b...               0   \n","0xe29526a3bff75256608c46231f9c237504cd1206e6849...               0   \n","0x2d2975548b8cdea84b19e2dd239990ae17b8fc5c9fa30...               0   \n","0xbf9d93ce593c5145be2e335b9ea4cd1838f465fbb7473...               0   \n","0xf35e198a1e826dfc275dbae9a83c587ff956298b9a0a2...               0   \n","0x6aff75e35246c9f757a241fa0bc8848c054b41ad2007f...               0   \n","0x78cd21a68a0ddaf0684e8f89467a2d15b16ec4147d54a...               0   \n","0x8fa7e26992e717d55e34454784605ae19d9697b88e859...               0   \n","0xc2ad81316ed85cd08711b7e67e53bbeb7871c1fe24c27...               0   \n","0xe8fddf91348363df61126262cdf541cf736b8e9322199...               0   \n","0xe3c69605c84fa4380385ed0fbb410180555436f243164...               0   \n","0xe5ac8cbcca40132705614602001dfb81eca43525e3887...               0   \n","0xb504f2665d23cf0e65785d737a42451e3467724cb261b...               0   \n","0x67fb7be3fbc598ef19414cbed1061460f552180652675...               0   \n","0xad340d1d141854ca3a0371bee60aaba8733c06e672330...               1   \n","0x994105e94c0a8e8c5acd8b83d4ffff83766c978d466d2...               0   \n","0x5fbf91464b5a094c6cba8bce65bf7a07d0cf899d6e469...               0   \n","0x4dcf0ea7f0cb3e43b510f03c32b9e826f9bba4b6e1990...               0   \n","0xfed33145387f47e5f874c638b0459e953a535b475cbb8...               0   \n","0x79d4fd6c7e77cf06ab8a86f2f185543c95889a7657d5a...               0   \n","0x696572d5379363a825494ae9e60ca6fbc902d8af94cc4...               0   \n","0x41c180a07352075be10d542f70a8a11604d1282491f09...               0   \n","0x57e4c893a74763e5f43434f3811977abb71406581036f...               0   \n","\n","                                                    human-kartik  \\\n","Unnamed: 0                                                         \n","0xc9bd6061f98c8f063dd565430a63693a4461620fc4d17...             0   \n","0xf1f3997c5bffc0320f7595d45ed23bac4b0384380e75e...             0   \n","0x1f24e50d1560feeb33648c41073442eb0d8e6141f3b45...             0   \n","0xbeafa8c284db35c2a2bdd09b8edc65e47aaf412773b2f...             0   \n","0x45dc7c1f0731e3c8cf9422188593d0f4ddcd62950e605...             1   \n","0x60655fde7ea1bf04ddfad81729cd4a4ac5b723f9b30d6...             0   \n","0xc445feb436b3bc891cc8078c952a0e70213cf4ecbd357...             0   \n","0x1dfbd4f4d36b25fbdfeb7b17f656175ed0d5e459e7af6...             0   \n","0xa3211a3b35e884c660988e88a36df3388cb8bd05794a6...             0   \n","0x1419529383d6a55e1f7d1315f840dcf6a8b93e99f8729...             0   \n","0xab72a47829397cc7ac1e53bb1c0126334d66e3bf87a29...             0   \n","0x3100ab96812906084d5b87f864e0d3fe16e04deb52d5a...             1   \n","0xaa2cb6e460687d5dfddaacf798e430a79f7b086ee891b...             0   \n","0xe29526a3bff75256608c46231f9c237504cd1206e6849...             0   \n","0x2d2975548b8cdea84b19e2dd239990ae17b8fc5c9fa30...             0   \n","0xbf9d93ce593c5145be2e335b9ea4cd1838f465fbb7473...             1   \n","0xf35e198a1e826dfc275dbae9a83c587ff956298b9a0a2...             0   \n","0x6aff75e35246c9f757a241fa0bc8848c054b41ad2007f...             0   \n","0x78cd21a68a0ddaf0684e8f89467a2d15b16ec4147d54a...             0   \n","0x8fa7e26992e717d55e34454784605ae19d9697b88e859...             0   \n","0xc2ad81316ed85cd08711b7e67e53bbeb7871c1fe24c27...             0   \n","0xe8fddf91348363df61126262cdf541cf736b8e9322199...             0   \n","0xe3c69605c84fa4380385ed0fbb410180555436f243164...             0   \n","0xe5ac8cbcca40132705614602001dfb81eca43525e3887...             0   \n","0xb504f2665d23cf0e65785d737a42451e3467724cb261b...             0   \n","0x67fb7be3fbc598ef19414cbed1061460f552180652675...             0   \n","0xad340d1d141854ca3a0371bee60aaba8733c06e672330...             0   \n","0x994105e94c0a8e8c5acd8b83d4ffff83766c978d466d2...             0   \n","0x5fbf91464b5a094c6cba8bce65bf7a07d0cf899d6e469...             1   \n","0x4dcf0ea7f0cb3e43b510f03c32b9e826f9bba4b6e1990...             0   \n","0xfed33145387f47e5f874c638b0459e953a535b475cbb8...             0   \n","0x79d4fd6c7e77cf06ab8a86f2f185543c95889a7657d5a...             0   \n","0x696572d5379363a825494ae9e60ca6fbc902d8af94cc4...             0   \n","0x41c180a07352075be10d542f70a8a11604d1282491f09...             0   \n","0x57e4c893a74763e5f43434f3811977abb71406581036f...             0   \n","\n","                                                    human-kartik_confident  \\\n","Unnamed: 0                                                                   \n","0xc9bd6061f98c8f063dd565430a63693a4461620fc4d17...                       0   \n","0xf1f3997c5bffc0320f7595d45ed23bac4b0384380e75e...                       0   \n","0x1f24e50d1560feeb33648c41073442eb0d8e6141f3b45...                       0   \n","0xbeafa8c284db35c2a2bdd09b8edc65e47aaf412773b2f...                       0   \n","0x45dc7c1f0731e3c8cf9422188593d0f4ddcd62950e605...                       0   \n","0x60655fde7ea1bf04ddfad81729cd4a4ac5b723f9b30d6...                       0   \n","0xc445feb436b3bc891cc8078c952a0e70213cf4ecbd357...                       0   \n","0x1dfbd4f4d36b25fbdfeb7b17f656175ed0d5e459e7af6...                       0   \n","0xa3211a3b35e884c660988e88a36df3388cb8bd05794a6...                       0   \n","0x1419529383d6a55e1f7d1315f840dcf6a8b93e99f8729...                       0   \n","0xab72a47829397cc7ac1e53bb1c0126334d66e3bf87a29...                       1   \n","0x3100ab96812906084d5b87f864e0d3fe16e04deb52d5a...                       0   \n","0xaa2cb6e460687d5dfddaacf798e430a79f7b086ee891b...                       0   \n","0xe29526a3bff75256608c46231f9c237504cd1206e6849...                       0   \n","0x2d2975548b8cdea84b19e2dd239990ae17b8fc5c9fa30...                       0   \n","0xbf9d93ce593c5145be2e335b9ea4cd1838f465fbb7473...                       0   \n","0xf35e198a1e826dfc275dbae9a83c587ff956298b9a0a2...                       0   \n","0x6aff75e35246c9f757a241fa0bc8848c054b41ad2007f...                       0   \n","0x78cd21a68a0ddaf0684e8f89467a2d15b16ec4147d54a...                       0   \n","0x8fa7e26992e717d55e34454784605ae19d9697b88e859...                       0   \n","0xc2ad81316ed85cd08711b7e67e53bbeb7871c1fe24c27...                       0   \n","0xe8fddf91348363df61126262cdf541cf736b8e9322199...                       0   \n","0xe3c69605c84fa4380385ed0fbb410180555436f243164...                       1   \n","0xe5ac8cbcca40132705614602001dfb81eca43525e3887...                       0   \n","0xb504f2665d23cf0e65785d737a42451e3467724cb261b...                       1   \n","0x67fb7be3fbc598ef19414cbed1061460f552180652675...                       0   \n","0xad340d1d141854ca3a0371bee60aaba8733c06e672330...                       0   \n","0x994105e94c0a8e8c5acd8b83d4ffff83766c978d466d2...                       0   \n","0x5fbf91464b5a094c6cba8bce65bf7a07d0cf899d6e469...                       0   \n","0x4dcf0ea7f0cb3e43b510f03c32b9e826f9bba4b6e1990...                       0   \n","0xfed33145387f47e5f874c638b0459e953a535b475cbb8...                       0   \n","0x79d4fd6c7e77cf06ab8a86f2f185543c95889a7657d5a...                       0   \n","0x696572d5379363a825494ae9e60ca6fbc902d8af94cc4...                       0   \n","0x41c180a07352075be10d542f70a8a11604d1282491f09...                       0   \n","0x57e4c893a74763e5f43434f3811977abb71406581036f...                       1   \n","\n","                                                    human-aman  \\\n","Unnamed: 0                                                       \n","0xc9bd6061f98c8f063dd565430a63693a4461620fc4d17...           1   \n","0xf1f3997c5bffc0320f7595d45ed23bac4b0384380e75e...           1   \n","0x1f24e50d1560feeb33648c41073442eb0d8e6141f3b45...           1   \n","0xbeafa8c284db35c2a2bdd09b8edc65e47aaf412773b2f...           1   \n","0x45dc7c1f0731e3c8cf9422188593d0f4ddcd62950e605...           0   \n","0x60655fde7ea1bf04ddfad81729cd4a4ac5b723f9b30d6...           1   \n","0xc445feb436b3bc891cc8078c952a0e70213cf4ecbd357...           1   \n","0x1dfbd4f4d36b25fbdfeb7b17f656175ed0d5e459e7af6...           1   \n","0xa3211a3b35e884c660988e88a36df3388cb8bd05794a6...           1   \n","0x1419529383d6a55e1f7d1315f840dcf6a8b93e99f8729...           1   \n","0xab72a47829397cc7ac1e53bb1c0126334d66e3bf87a29...           1   \n","0x3100ab96812906084d5b87f864e0d3fe16e04deb52d5a...           0   \n","0xaa2cb6e460687d5dfddaacf798e430a79f7b086ee891b...           1   \n","0xe29526a3bff75256608c46231f9c237504cd1206e6849...           1   \n","0x2d2975548b8cdea84b19e2dd239990ae17b8fc5c9fa30...           1   \n","0xbf9d93ce593c5145be2e335b9ea4cd1838f465fbb7473...           0   \n","0xf35e198a1e826dfc275dbae9a83c587ff956298b9a0a2...           1   \n","0x6aff75e35246c9f757a241fa0bc8848c054b41ad2007f...           1   \n","0x78cd21a68a0ddaf0684e8f89467a2d15b16ec4147d54a...           1   \n","0x8fa7e26992e717d55e34454784605ae19d9697b88e859...           1   \n","0xc2ad81316ed85cd08711b7e67e53bbeb7871c1fe24c27...           1   \n","0xe8fddf91348363df61126262cdf541cf736b8e9322199...           1   \n","0xe3c69605c84fa4380385ed0fbb410180555436f243164...           1   \n","0xe5ac8cbcca40132705614602001dfb81eca43525e3887...           1   \n","0xb504f2665d23cf0e65785d737a42451e3467724cb261b...           1   \n","0x67fb7be3fbc598ef19414cbed1061460f552180652675...           1   \n","0xad340d1d141854ca3a0371bee60aaba8733c06e672330...           1   \n","0x994105e94c0a8e8c5acd8b83d4ffff83766c978d466d2...           1   \n","0x5fbf91464b5a094c6cba8bce65bf7a07d0cf899d6e469...           0   \n","0x4dcf0ea7f0cb3e43b510f03c32b9e826f9bba4b6e1990...           1   \n","0xfed33145387f47e5f874c638b0459e953a535b475cbb8...           1   \n","0x79d4fd6c7e77cf06ab8a86f2f185543c95889a7657d5a...           1   \n","0x696572d5379363a825494ae9e60ca6fbc902d8af94cc4...           1   \n","0x41c180a07352075be10d542f70a8a11604d1282491f09...           1   \n","0x57e4c893a74763e5f43434f3811977abb71406581036f...           1   \n","\n","                                                    human-aman_confident  \\\n","Unnamed: 0                                                                 \n","0xc9bd6061f98c8f063dd565430a63693a4461620fc4d17...                     1   \n","0xf1f3997c5bffc0320f7595d45ed23bac4b0384380e75e...                     0   \n","0x1f24e50d1560feeb33648c41073442eb0d8e6141f3b45...                     1   \n","0xbeafa8c284db35c2a2bdd09b8edc65e47aaf412773b2f...                     1   \n","0x45dc7c1f0731e3c8cf9422188593d0f4ddcd62950e605...                     1   \n","0x60655fde7ea1bf04ddfad81729cd4a4ac5b723f9b30d6...                     1   \n","0xc445feb436b3bc891cc8078c952a0e70213cf4ecbd357...                     1   \n","0x1dfbd4f4d36b25fbdfeb7b17f656175ed0d5e459e7af6...                     1   \n","0xa3211a3b35e884c660988e88a36df3388cb8bd05794a6...                     0   \n","0x1419529383d6a55e1f7d1315f840dcf6a8b93e99f8729...                     0   \n","0xab72a47829397cc7ac1e53bb1c0126334d66e3bf87a29...                     0   \n","0x3100ab96812906084d5b87f864e0d3fe16e04deb52d5a...                     1   \n","0xaa2cb6e460687d5dfddaacf798e430a79f7b086ee891b...                     0   \n","0xe29526a3bff75256608c46231f9c237504cd1206e6849...                     0   \n","0x2d2975548b8cdea84b19e2dd239990ae17b8fc5c9fa30...                     1   \n","0xbf9d93ce593c5145be2e335b9ea4cd1838f465fbb7473...                     1   \n","0xf35e198a1e826dfc275dbae9a83c587ff956298b9a0a2...                     0   \n","0x6aff75e35246c9f757a241fa0bc8848c054b41ad2007f...                     1   \n","0x78cd21a68a0ddaf0684e8f89467a2d15b16ec4147d54a...                     1   \n","0x8fa7e26992e717d55e34454784605ae19d9697b88e859...                     0   \n","0xc2ad81316ed85cd08711b7e67e53bbeb7871c1fe24c27...                     1   \n","0xe8fddf91348363df61126262cdf541cf736b8e9322199...                     1   \n","0xe3c69605c84fa4380385ed0fbb410180555436f243164...                     0   \n","0xe5ac8cbcca40132705614602001dfb81eca43525e3887...                     1   \n","0xb504f2665d23cf0e65785d737a42451e3467724cb261b...                     1   \n","0x67fb7be3fbc598ef19414cbed1061460f552180652675...                     0   \n","0xad340d1d141854ca3a0371bee60aaba8733c06e672330...                     0   \n","0x994105e94c0a8e8c5acd8b83d4ffff83766c978d466d2...                     0   \n","0x5fbf91464b5a094c6cba8bce65bf7a07d0cf899d6e469...                     1   \n","0x4dcf0ea7f0cb3e43b510f03c32b9e826f9bba4b6e1990...                     1   \n","0xfed33145387f47e5f874c638b0459e953a535b475cbb8...                     1   \n","0x79d4fd6c7e77cf06ab8a86f2f185543c95889a7657d5a...                     1   \n","0x696572d5379363a825494ae9e60ca6fbc902d8af94cc4...                     1   \n","0x41c180a07352075be10d542f70a8a11604d1282491f09...                     1   \n","0x57e4c893a74763e5f43434f3811977abb71406581036f...                     1   \n","\n","                                                    human-srinik  \\\n","Unnamed: 0                                                         \n","0xc9bd6061f98c8f063dd565430a63693a4461620fc4d17...             0   \n","0xf1f3997c5bffc0320f7595d45ed23bac4b0384380e75e...             0   \n","0x1f24e50d1560feeb33648c41073442eb0d8e6141f3b45...             0   \n","0xbeafa8c284db35c2a2bdd09b8edc65e47aaf412773b2f...             0   \n","0x45dc7c1f0731e3c8cf9422188593d0f4ddcd62950e605...             0   \n","0x60655fde7ea1bf04ddfad81729cd4a4ac5b723f9b30d6...             0   \n","0xc445feb436b3bc891cc8078c952a0e70213cf4ecbd357...             0   \n","0x1dfbd4f4d36b25fbdfeb7b17f656175ed0d5e459e7af6...             0   \n","0xa3211a3b35e884c660988e88a36df3388cb8bd05794a6...             0   \n","0x1419529383d6a55e1f7d1315f840dcf6a8b93e99f8729...             0   \n","0xab72a47829397cc7ac1e53bb1c0126334d66e3bf87a29...             0   \n","0x3100ab96812906084d5b87f864e0d3fe16e04deb52d5a...             0   \n","0xaa2cb6e460687d5dfddaacf798e430a79f7b086ee891b...             0   \n","0xe29526a3bff75256608c46231f9c237504cd1206e6849...             0   \n","0x2d2975548b8cdea84b19e2dd239990ae17b8fc5c9fa30...             0   \n","0xbf9d93ce593c5145be2e335b9ea4cd1838f465fbb7473...             0   \n","0xf35e198a1e826dfc275dbae9a83c587ff956298b9a0a2...             0   \n","0x6aff75e35246c9f757a241fa0bc8848c054b41ad2007f...             0   \n","0x78cd21a68a0ddaf0684e8f89467a2d15b16ec4147d54a...             0   \n","0x8fa7e26992e717d55e34454784605ae19d9697b88e859...             0   \n","0xc2ad81316ed85cd08711b7e67e53bbeb7871c1fe24c27...             0   \n","0xe8fddf91348363df61126262cdf541cf736b8e9322199...             0   \n","0xe3c69605c84fa4380385ed0fbb410180555436f243164...             0   \n","0xe5ac8cbcca40132705614602001dfb81eca43525e3887...             0   \n","0xb504f2665d23cf0e65785d737a42451e3467724cb261b...             0   \n","0x67fb7be3fbc598ef19414cbed1061460f552180652675...             0   \n","0xad340d1d141854ca3a0371bee60aaba8733c06e672330...             0   \n","0x994105e94c0a8e8c5acd8b83d4ffff83766c978d466d2...             0   \n","0x5fbf91464b5a094c6cba8bce65bf7a07d0cf899d6e469...             0   \n","0x4dcf0ea7f0cb3e43b510f03c32b9e826f9bba4b6e1990...             0   \n","0xfed33145387f47e5f874c638b0459e953a535b475cbb8...             0   \n","0x79d4fd6c7e77cf06ab8a86f2f185543c95889a7657d5a...             0   \n","0x696572d5379363a825494ae9e60ca6fbc902d8af94cc4...             0   \n","0x41c180a07352075be10d542f70a8a11604d1282491f09...             0   \n","0x57e4c893a74763e5f43434f3811977abb71406581036f...             0   \n","\n","                                                    human-srinik_confident  \\\n","Unnamed: 0                                                                   \n","0xc9bd6061f98c8f063dd565430a63693a4461620fc4d17...                       1   \n","0xf1f3997c5bffc0320f7595d45ed23bac4b0384380e75e...                       1   \n","0x1f24e50d1560feeb33648c41073442eb0d8e6141f3b45...                       1   \n","0xbeafa8c284db35c2a2bdd09b8edc65e47aaf412773b2f...                       1   \n","0x45dc7c1f0731e3c8cf9422188593d0f4ddcd62950e605...                       1   \n","0x60655fde7ea1bf04ddfad81729cd4a4ac5b723f9b30d6...                       0   \n","0xc445feb436b3bc891cc8078c952a0e70213cf4ecbd357...                       0   \n","0x1dfbd4f4d36b25fbdfeb7b17f656175ed0d5e459e7af6...                       1   \n","0xa3211a3b35e884c660988e88a36df3388cb8bd05794a6...                       1   \n","0x1419529383d6a55e1f7d1315f840dcf6a8b93e99f8729...                       1   \n","0xab72a47829397cc7ac1e53bb1c0126334d66e3bf87a29...                       1   \n","0x3100ab96812906084d5b87f864e0d3fe16e04deb52d5a...                       0   \n","0xaa2cb6e460687d5dfddaacf798e430a79f7b086ee891b...                       1   \n","0xe29526a3bff75256608c46231f9c237504cd1206e6849...                       1   \n","0x2d2975548b8cdea84b19e2dd239990ae17b8fc5c9fa30...                       1   \n","0xbf9d93ce593c5145be2e335b9ea4cd1838f465fbb7473...                       1   \n","0xf35e198a1e826dfc275dbae9a83c587ff956298b9a0a2...                       0   \n","0x6aff75e35246c9f757a241fa0bc8848c054b41ad2007f...                       1   \n","0x78cd21a68a0ddaf0684e8f89467a2d15b16ec4147d54a...                       0   \n","0x8fa7e26992e717d55e34454784605ae19d9697b88e859...                       1   \n","0xc2ad81316ed85cd08711b7e67e53bbeb7871c1fe24c27...                       1   \n","0xe8fddf91348363df61126262cdf541cf736b8e9322199...                       1   \n","0xe3c69605c84fa4380385ed0fbb410180555436f243164...                       1   \n","0xe5ac8cbcca40132705614602001dfb81eca43525e3887...                       1   \n","0xb504f2665d23cf0e65785d737a42451e3467724cb261b...                       1   \n","0x67fb7be3fbc598ef19414cbed1061460f552180652675...                       1   \n","0xad340d1d141854ca3a0371bee60aaba8733c06e672330...                       1   \n","0x994105e94c0a8e8c5acd8b83d4ffff83766c978d466d2...                       1   \n","0x5fbf91464b5a094c6cba8bce65bf7a07d0cf899d6e469...                       1   \n","0x4dcf0ea7f0cb3e43b510f03c32b9e826f9bba4b6e1990...                       1   \n","0xfed33145387f47e5f874c638b0459e953a535b475cbb8...                       1   \n","0x79d4fd6c7e77cf06ab8a86f2f185543c95889a7657d5a...                       1   \n","0x696572d5379363a825494ae9e60ca6fbc902d8af94cc4...                       1   \n","0x41c180a07352075be10d542f70a8a11604d1282491f09...                       1   \n","0x57e4c893a74763e5f43434f3811977abb71406581036f...                       1   \n","\n","                                                    GT  GroundTruth  \n","Unnamed: 0                                                           \n","0xc9bd6061f98c8f063dd565430a63693a4461620fc4d17...   1            0  \n","0xf1f3997c5bffc0320f7595d45ed23bac4b0384380e75e...   1            0  \n","0x1f24e50d1560feeb33648c41073442eb0d8e6141f3b45...   1            0  \n","0xbeafa8c284db35c2a2bdd09b8edc65e47aaf412773b2f...   1            0  \n","0x45dc7c1f0731e3c8cf9422188593d0f4ddcd62950e605...   1            0  \n","0x60655fde7ea1bf04ddfad81729cd4a4ac5b723f9b30d6...   1            0  \n","0xc445feb436b3bc891cc8078c952a0e70213cf4ecbd357...   1            0  \n","0x1dfbd4f4d36b25fbdfeb7b17f656175ed0d5e459e7af6...   1            0  \n","0xa3211a3b35e884c660988e88a36df3388cb8bd05794a6...   1            0  \n","0x1419529383d6a55e1f7d1315f840dcf6a8b93e99f8729...   1            0  \n","0xab72a47829397cc7ac1e53bb1c0126334d66e3bf87a29...   1            0  \n","0x3100ab96812906084d5b87f864e0d3fe16e04deb52d5a...   1            0  \n","0xaa2cb6e460687d5dfddaacf798e430a79f7b086ee891b...   1            0  \n","0xe29526a3bff75256608c46231f9c237504cd1206e6849...   1            0  \n","0x2d2975548b8cdea84b19e2dd239990ae17b8fc5c9fa30...   1            0  \n","0xbf9d93ce593c5145be2e335b9ea4cd1838f465fbb7473...   1            0  \n","0xf35e198a1e826dfc275dbae9a83c587ff956298b9a0a2...   1            0  \n","0x6aff75e35246c9f757a241fa0bc8848c054b41ad2007f...   1            0  \n","0x78cd21a68a0ddaf0684e8f89467a2d15b16ec4147d54a...   1            0  \n","0x8fa7e26992e717d55e34454784605ae19d9697b88e859...   1            0  \n","0xc2ad81316ed85cd08711b7e67e53bbeb7871c1fe24c27...   1            0  \n","0xe8fddf91348363df61126262cdf541cf736b8e9322199...   1            0  \n","0xe3c69605c84fa4380385ed0fbb410180555436f243164...   1            0  \n","0xe5ac8cbcca40132705614602001dfb81eca43525e3887...   1            0  \n","0xb504f2665d23cf0e65785d737a42451e3467724cb261b...   1            0  \n","0x67fb7be3fbc598ef19414cbed1061460f552180652675...   1            0  \n","0xad340d1d141854ca3a0371bee60aaba8733c06e672330...   1            0  \n","0x994105e94c0a8e8c5acd8b83d4ffff83766c978d466d2...   1            0  \n","0x5fbf91464b5a094c6cba8bce65bf7a07d0cf899d6e469...   1            0  \n","0x4dcf0ea7f0cb3e43b510f03c32b9e826f9bba4b6e1990...   1            0  \n","0xfed33145387f47e5f874c638b0459e953a535b475cbb8...   1            0  \n","0x79d4fd6c7e77cf06ab8a86f2f185543c95889a7657d5a...   1            0  \n","0x696572d5379363a825494ae9e60ca6fbc902d8af94cc4...   1            0  \n","0x41c180a07352075be10d542f70a8a11604d1282491f09...   1            0  \n","0x57e4c893a74763e5f43434f3811977abb71406581036f...   1            0  "],"text/html":["\n","  <div id=\"df-9f21981d-3ce3-4150-b1c0-c7d435b7f40f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>exact-match</th>\n","      <th>contains-match</th>\n","      <th>human-kartik</th>\n","      <th>human-kartik_confident</th>\n","      <th>human-aman</th>\n","      <th>human-aman_confident</th>\n","      <th>human-srinik</th>\n","      <th>human-srinik_confident</th>\n","      <th>GT</th>\n","      <th>GroundTruth</th>\n","    </tr>\n","    <tr>\n","      <th>Unnamed: 0</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0xc9bd6061f98c8f063dd565430a63693a4461620fc4d179101221797ee49a36fa</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0xf1f3997c5bffc0320f7595d45ed23bac4b0384380e75e152e5125b45ef2365b7</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0x1f24e50d1560feeb33648c41073442eb0d8e6141f3b450c1e50df9dc4743fc6b</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0xbeafa8c284db35c2a2bdd09b8edc65e47aaf412773b2fac8607b24c3e466811f</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0x45dc7c1f0731e3c8cf9422188593d0f4ddcd62950e605060871eaedbe6b1a6de</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0x60655fde7ea1bf04ddfad81729cd4a4ac5b723f9b30d6d552efa8200e209bf84</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0xc445feb436b3bc891cc8078c952a0e70213cf4ecbd357586b1b022ac6a88a293</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0x1dfbd4f4d36b25fbdfeb7b17f656175ed0d5e459e7af6caa6ed8d0dd9bcae801</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0xa3211a3b35e884c660988e88a36df3388cb8bd05794a60fdad018218fcf433d1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0x1419529383d6a55e1f7d1315f840dcf6a8b93e99f8729eaaeab193676ee7ede9</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0xab72a47829397cc7ac1e53bb1c0126334d66e3bf87a297740f6788079e771e78</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0x3100ab96812906084d5b87f864e0d3fe16e04deb52d5a6f1bea27549827e86</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0xaa2cb6e460687d5dfddaacf798e430a79f7b086ee891b04dd0d4cdd9382102ba</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0xe29526a3bff75256608c46231f9c237504cd1206e6849c7d08d0d8951ffcee72</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0x2d2975548b8cdea84b19e2dd239990ae17b8fc5c9fa300b2866a4025bd2441e2</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0xbf9d93ce593c5145be2e335b9ea4cd1838f465fbb74737fd419700ae76540643</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0xf35e198a1e826dfc275dbae9a83c587ff956298b9a0a20f4a5cb3f8e454ada7</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0x6aff75e35246c9f757a241fa0bc8848c054b41ad2007fcb4fdc34bd012cd8617</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0x78cd21a68a0ddaf0684e8f89467a2d15b16ec4147d54a2e4f49d4eeb037f6605</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0x8fa7e26992e717d55e34454784605ae19d9697b88e85983ad862dc127f44d514</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0xc2ad81316ed85cd08711b7e67e53bbeb7871c1fe24c27f0dc39e234ecb331c22</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0xe8fddf91348363df61126262cdf541cf736b8e9322199e35be488fb9ea65158f</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0xe3c69605c84fa4380385ed0fbb410180555436f243164cc5a81e6d0ae2d27dff</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0xe5ac8cbcca40132705614602001dfb81eca43525e38878120104293f503fb745</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0xb504f2665d23cf0e65785d737a42451e3467724cb261b086aa6f2f6e02ae7f2d</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0x67fb7be3fbc598ef19414cbed1061460f5521806526759dc53c3f966d35bfe7b</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0xad340d1d141854ca3a0371bee60aaba8733c06e6723309b7679bd8221a3740b7</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0x994105e94c0a8e8c5acd8b83d4ffff83766c978d466d27f5635b63bdef29523d</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0x5fbf91464b5a094c6cba8bce65bf7a07d0cf899d6e469cd5e93f36ed9a325dee</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0x4dcf0ea7f0cb3e43b510f03c32b9e826f9bba4b6e1990881d0a095869b4e2b52</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0xfed33145387f47e5f874c638b0459e953a535b475cbb8b5ec4c5f11fd69c99e2</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0x79d4fd6c7e77cf06ab8a86f2f185543c95889a7657d5afcf4d828351ebf8e726</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0x696572d5379363a825494ae9e60ca6fbc902d8af94cc4b0dd15886a199e7e022</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0x41c180a07352075be10d542f70a8a11604d1282491f09bfa8c5678f5189b369f</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0x57e4c893a74763e5f43434f3811977abb71406581036f0e397ca11d4dd22ab1d</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9f21981d-3ce3-4150-b1c0-c7d435b7f40f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9f21981d-3ce3-4150-b1c0-c7d435b7f40f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9f21981d-3ce3-4150-b1c0-c7d435b7f40f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-10915d99-ca1f-4ee2-9ad9-eadb5a975441\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-10915d99-ca1f-4ee2-9ad9-eadb5a975441')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-10915d99-ca1f-4ee2-9ad9-eadb5a975441 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df[df['GT']==1]\",\n  \"rows\": 35,\n  \"fields\": [\n    {\n      \"column\": \"exact-match\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"contains-match\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"human-kartik\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"human-kartik_confident\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"human-aman\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"human-aman_confident\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"human-srinik\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"human-srinik_confident\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GT\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"GroundTruth\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":87}]},{"cell_type":"code","source":[],"metadata":{"id":"ZH3EnFBhviss"},"execution_count":null,"outputs":[]}]}